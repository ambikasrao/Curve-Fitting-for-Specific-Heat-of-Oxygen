clear all
close all
clc
%cp_data = load('data');

data = [175	0.910;
    200  0.910;
    225  0.911;
    250  0.913;
    275  0.915;
    300  0.918;
    325  0.923;
    350  0.928;
    375  0.934;
    400  0.941;
    450  0.956;
    500  0.972;
    550  0.988;
    600  1.003;
    650  1.017;
    700  1.031;
    750  1.043;
    800  1.054;
    850  1.065;
    900  1.074;
    950  1.082;
    1000 1.090;
    1050 1.097;
    1100 1.103;
    1150 1.109;
    1200 1.115;
    1250 1.120;
    1300 1.125;
    1350 1.130;
    1400 1.134;
    1500 1.143;
    1600 1.151;
    1700 1.158;
    1800 1.166;
    1900 1.173;
    2000 1.181;
    2100 1.188;
    2200 1.195;
    2300 1.202;
    2400 1.209;
    2500 1.216;
    2600 1.223;
    2700 1.230;
    2800 1.236;
    2900 1.243;
    3000 1.249;
    3500 1.276;
    4000 1.299;
    4500 1.316;
    5000 1.328;
    5500 1.337;
    6000 1.344
    ];

%extracting temperature data (1st column) from the array data
%extracting specific heat(cp) data (2nd column) from the array data
specificHeat.temp=data(:,1);
specificHeat.cp=data(:,2);
display(specificHeat)
disp(specificHeat.temp)
disp(specificHeat.cp)

t1=table(specificHeat.temp,specificHeat.cp,'VariableNames',{'Temperature','cp'})

%curve fit
%assuming cp to be a linear function of temperature, cp= a*T + b
%Using inbuilt function for curve fitting
co_eff1 = polyfit(t1.Temperature,t1.cp,1);
predicted_cp1 =polyval(co_eff1,t1.Temperature);
co_eff3 = polyfit(t1.Temperature,t1.cp,3);
predicted_cp3 =polyval(co_eff3,t1.Temperature);
co_eff6 = polyfit(t1.Temperature,t1.cp,6);
predicted_cp6 =polyval(co_eff6,t1.Temperature);

%plotting Specific Heat(cp) against Temperature curve
figure(1)
plot(t1.Temperature,t1.cp,'linewidth',3)
hold on
plot(t1.Temperature,predicted_cp1,'linewidth',3,'color','r')
xlabel('Temperature')
ylabel('Specific Heat[KJ/Kmol-K]')
legend('Original dataset','location','southeast')
title('Original Dataset')

figure(2)
plot(t1.Temperature,t1.cp,'linewidth',3)
hold on
plot(t1.Temperature,predicted_cp3,'linewidth',3,'color','r')
xlabel('Temperature')
ylabel('Specific Heat[KJ/Kmol-K]')
legend('Original dataset','location','southeast')
title('Original Dataset')

figure(3)
plot(t1.Temperature,t1.cp,'linewidth',3)
hold on
plot(t1.Temperature,predicted_cp6,'linewidth',3,'color','r')
xlabel('Temperature')
ylabel('Specific Heat[KJ/Kmol-K]')
legend('Original dataset','location','southeast')
title('Original Dataset')

sum=0;
x=t1.cp(:,end);
for i=1:length(x)
    sum=sum+t1.cp(i,end);
end
mean=sum/length(x);
ssr=0;
for j=1:length(x)
    ssr=ssr+(predicted_cp1(j)-mean)^2;
end
sse=0;
for k=1:50
    sse=sse+(t1.cp(k,end)-predicted_cp1(k))^2;
end
sst=ssr+sse;
r=ssr/sst;
disp('R square=');
disp(r)

ssr3=0;
for j=1:length(x)
    ssr3=ssr3+(predicted_cp3(j)-mean)^2;
end
sse3=0;
for k=1:50
    sse3=sse3+(t1.cp(k,end)-predicted_cp3(k))^2;
end
sst3=ssr3+sse3;
r3=ssr3/sst3;
disp('R square3=');
disp(r3)

ssr6=0;
for j=1:length(x)
    ssr6=ssr6+(predicted_cp6(j)-mean)^2;
end
sse6=0;
for k=1:50
    sse6=sse6+(t1.cp(k,end)-predicted_cp6(k))^2;
end
sst6=ssr6+sse6;
r6=ssr6/sst6;
disp('R square6=');
disp(r6)

%result=runtests("SpecificHeat");
